<Window x:Class="EasyCrawling.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ex="clr-namespace:EasyCrawling.Extensions"
        xmlns:local="clr-namespace:EasyCrawling"
        xmlns:enums="clr-namespace:EasyCrawling.Enums"
        mc:Ignorable="d"
        Title="EasyCrawling" Height="450" Width="800"
        Closing="Window_Closing"
        Activated="Window_Activated">
    <Window.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding SaveCrawlingsCommand}"/>
    </Window.InputBindings>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <ToolBarTray>
                <ToolBar>
                    <ToggleButton Content="Url Option" IsChecked="{Binding IsCheckedUrlOption}"/>
                </ToolBar>
            </ToolBarTray>
        </Grid>

        <Grid Grid.Row="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <DataGrid ItemsSource="{Binding CrawlingList}"
                      SelectedItem="{Binding SelectedCrawling}"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      HeadersVisibility="Column"          
                      SelectionMode="Single"
                      PreviewMouseDown="DataGrid_PreviewMouseDown"
                      Width="Auto"
                      Grid.Column="0">

                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="New Crawling"
                                  Command="{Binding AddCrawlingCommand}"/>
                        <MenuItem Header="Delete" 
                                  Command="{Binding DeleteCrawlingCommand}"
                                  CommandParameter="{Binding Path=PlacementTarget.SelectedItem,
                                                             RelativeSource={RelativeSource FindAncestor,
                                                                                            AncestorType={x:Type ContextMenu}}}" />
                        <MenuItem Header="Copy" 
                                  Command="{Binding CopyCrawlingCommand}"
                                  CommandParameter="{Binding Path=PlacementTarget.SelectedItem,
                                                             RelativeSource={RelativeSource FindAncestor,
                                                                                            AncestorType={x:Type ContextMenu}}}" />
                        <MenuItem Header="Save to fIle" 
                                  Command="{Binding SaveCrawlingsCommand}"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Width="Auto"
                                        Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
                    
                    <DataGridTextColumn Header="Url" Width="*"
                                        Binding="{Binding Url, UpdateSourceTrigger=PropertyChanged}"
                                        IsReadOnly="True"/>
                    
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="Reset" 
                                        Command="{Binding DataContext.ResetCrawlingsCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    
                    <DataGridTemplateColumn MinWidth="50">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="Modify" 
                                        Command="{Binding DataContext.ModifyCrawlingCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn MinWidth="25">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="{Binding StartString, UpdateSourceTrigger=PropertyChanged}"
                                        Command="{Binding DataContext.StartCrawlingCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

            <Grid Grid.Column="1" Width="300"
                  Visibility="{Binding DataContext.IsVisibleUrlOption, 
                                       RelativeSource={RelativeSource AncestorType=Window}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto" MinHeight="50"/>
                </Grid.RowDefinitions>

                <GroupBox Grid.Row="0" Header="Url Option">
                    <DataGrid ItemsSource="{Binding UrlOptionList, UpdateSourceTrigger=PropertyChanged}"
                              AutoGenerateColumns="False"
                              CanUserAddRows="False"
                              HeadersVisibility="None"  
                              SelectionMode="Single"
                              PreviewMouseDown="DataGrid_PreviewMouseDown">
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="New Option"
                                          Command="{Binding AddUrlOptionCommand}"/>
                                <MenuItem Header="Delete" 
                                          Command="{Binding DeleteUrlOptionCommand}"
                                          CommandParameter="{Binding Path=PlacementTarget.SelectedItem,
                                                                     RelativeSource={RelativeSource FindAncestor,
                                                                                                    AncestorType={x:Type ContextMenu}}}" />
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>
                            <DataGridTextColumn Width="*" Binding="{Binding Option, Mode=TwoWay ,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </GroupBox>

                <GroupBox Grid.Row="1" Header="When do crawling">
                    <DataGrid ItemsSource="{Binding WhenList, UpdateSourceTrigger=PropertyChanged}"
                              AutoGenerateColumns="False"
                              CanUserAddRows="False"
                              HeadersVisibility="Column"  
                              SelectionMode="Single"
                              PreviewMouseDown="DataGrid_PreviewMouseDown">
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="New Time"
                                          Command="{Binding AddTImeCommand}"/>
                                <MenuItem Header="Delete" 
                                          Command="{Binding DeleteTImeCommand}"
                                          CommandParameter="{Binding Path=PlacementTarget.SelectedItem,
                                                                     RelativeSource={RelativeSource FindAncestor,
                                                                                                AncestorType={x:Type ContextMenu}}}" />
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>
                            <DataGridComboBoxColumn Header="Time Span" Width="*"
                                                    SelectedValueBinding="{Binding When, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    ItemsSource="{Binding Source={ex:EnumerationExtension {x:Type enums:TimeSpanType}}}"
                                                    DisplayMemberPath="Description"
                                                    SelectedValuePath="Value"/>
 
                            <DataGridComboBoxColumn Header="Week" Width="70"
                                                    SelectedValueBinding="{Binding Week, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    ItemsSource="{Binding Source={ex:EnumerationExtension {x:Type enums:Week}}}" 
                                                    DisplayMemberPath="Description"
                                                    SelectedValuePath="Value"/>
                            <DataGridTextColumn Header="Hour" Width="30"
                                                Binding="{Binding Hour, Mode=TwoWay ,UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTextColumn Header="Min " Width="30"
                                                Binding="{Binding Min, Mode=TwoWay ,UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTextColumn Header="Sec" Width="30"
                                                Binding="{Binding Sec, Mode=TwoWay ,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </GroupBox>
            </Grid>
        </Grid>       
    </Grid>
</Window>
